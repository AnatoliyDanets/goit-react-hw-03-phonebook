{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInput","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","form__label","form__input","type","pattern","title","required","onChange","form__btn","Component","ContactListItem","id","onDelete","contact__item","contact__text","contact__btn","onClick","ContactList","contacts","contact","map","Filter","onFilter","filter","filter__input","Container","children","container","App","addContact","uuidv4","find","toLowerCase","alert","console","log","addFilter","filterList","includes","deleteContact","contactId","prevState","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da28432a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__2FzYi\",\"contact__item\":\"ContactList_contact__item__1Cvca\",\"contact__text\":\"ContactList_contact__text__2Yypf\",\"contact__btn\":\"ContactList_contact__btn__1xoPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Grlb\",\"form__label\":\"ContactForm_form__label__2R6ZO\",\"form__input\":\"ContactForm_form__input__19EMX\",\"form__btn\":\"ContactForm_form__btn__3C-nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3YOrF\",\"filter__input\":\"Filter_filter__input__hqG93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__YWeOp\"};","import { Component } from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => this.setState({ name: \"\", number: \"\" });\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.form__label}>\r\n          Name\r\n          <input\r\n            className={s.form__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleInput}\r\n          />\r\n        </label>\r\n        <label className={s.form__label}>\r\n          Number\r\n          <input\r\n            className={s.form__input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleInput}\r\n          />\r\n        </label>\r\n        <button className={s.form__btn} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\n\r\nexport default function ContactListItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li key={id} className={s.contact__item}>\r\n      <div>\r\n        <span className={s.contact__text}>{name}: </span>\r\n        <span className={s.contact__text}>{number}</span>\r\n      </div>\r\n      <button\r\n        className={s.contact__btn}\r\n        onClick={() => {\r\n          onDelete(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.contact}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../Filter/Filter.module.css\";\r\n\r\nexport default function Filter({ value, onFilter }) {\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n","import s from \"../Container/Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Container from \"./components/Container\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    )\n      ? alert(`${contact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [...contacts, contact],\n        }));\n    console.log(contacts);\n  };\n\n  addFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterList = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilter={this.addFilter} />\n        <ContactList\n          contacts={this.filterList()}\n          onDelete={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}